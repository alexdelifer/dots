#!/bin/bash
# Dependencies:
# imagemagick
# sway
# swaylock
# swayidle
# grim
# jq
# corrupter (https://github.com/r00tman/corrupter)

# First, lock the screen at $LOCKTIMEOUT seconds.
# Next, notify the user at $LOCKTIMEOUT - $NOTIFYTIMEOUTDIFF seconds.
# Next, turn off the screen at $LOCKTIMEOUT + $DIMTIMEOUTDIFF seconds.
# If there is keyboard/mouse movement, turn the screen back on.
# If 'swaylock' is running, lock the screen at 30 seconds.
# If there is mouse/keyboard movement, and 'swaylock' is running, turn the screen back on.
# Lock before sleeping
# loginctl lock-session calls $LOCKCMD

# IDLE OPTIONS
LOCKTIMEOUT=300 		# 5 Minutes
NOTIFYTIMEOUTDIFF=10 		# How long before lock should we notify
DIMTIMEOUTDIFF=60 		# How long after lock should we dim

# LOCK OPTIONS
LOCKARGS="-f"
LOCKLOGO=~/.config/sway/crypto-lock.png

# GLITCH OPTIONS
CORRUPTERARGS=" -mag 3 \
		-boffset 20 \
		-meanabber 20"

# DONT TOUCH
LOCKCMD="$(realpath $0)"
IMAGE=/tmp/swaylock.png
LOCKNOTIFY=$((LOCKTIMEOUT - NOTIFYTIMEOUTDIFF)) #  -10 secs
DIMTIMEOUT=$((LOCKTIMEOUT + DIMTIMEOUTDIFF)) 	#  +30 secs
LOCKSESSION="loginctl lock-session $XDG_SESSION_ID"

function lock(){
	
	notify-send -t 2000 -a "swaylock" "Locking Screen!"
	
	if pgrep swaylock; then 
		echo "Already Locked." 
	fi
	
	# Get active displays, screenshot them, corrupt the image,
	# and add the $LOCKLOGO on top. 
	for OUTPUT in $(swaymsg -t get_outputs \
		| jq -r '.[] | select(.active == true) | .name')
	do
	    IMAGE=/tmp/$OUTPUT-lock.png
	    grim -o $OUTPUT $IMAGE
	    corrupter $CORRUPTERARGS $IMAGE $IMAGE
	    composite -gravity center $LOCKLOGO $IMAGE $IMAGE
	    LOCKARGS="${LOCKARGS} --image ${OUTPUT}:${IMAGE}"
	    IMAGES="${IMAGES} ${IMAGE}"
	done
	
	swaylock $LOCKARGS
	
	rm $IMAGES

}

function idle(){


	swayidle -w \
		timeout $LOCKTIMEOUT $LOCKCMD \
		timeout $LOCKNOTIFY 'notify-send "Locking screen due to inactivity in ${NOTIFYTIMEOUTDIFF} secs"' \
		timeout $DIMTIMEOUT 'swaymsg "output * dpms off"' \
		resume 'swaymsg "output * dpms on"' \
		timeout 30 'if pgrep swaylock; then swaymsg "output * dpms off"; fi' \
		resume 'if pgrep swaylock; then swaymsg "output * dpms on"; fi' \
		before-sleep $LOCKCMD \
		lock "$LOCKCMD"

}

if [[ "${1}" == "-w" ]] ; then
	idle
else
	lock
fi

